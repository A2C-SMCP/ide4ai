[project]
name = "ide4ai"
version = "0.1.0"
description = "A powerful IDE environment designed for AI agents to interact with code"
readme = "README.md"
authors = [
    { name = "JQQ", email = "jqq1716@gmail.com" }
]
requires-python = ">=3.10,<3.13"
dependencies = [
    "pydantic>=2.11.0,<3.0.0",
    "gymnasium>=0.29.1",
    "simple-parsing>=0.1.5",
    "docker>=7.0.0",
    "paramiko>=3.4.0",
    "emoji>=2.11.1",
    "loguru>=0.7.2",
    "cachetools>=5.3.2",
    "jinja2>=3.1.6",
    "regex>=2025.10.23",
]
license = { text = "MIT" }
keywords = ["ai", "ide", "lsp", "code-editor", "ai-agent"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Code Generators",
]

[project.urls]
Homepage = "https://github.com/JQQ/ide4ai"
Repository = "https://github.com/JQQ/ide4ai"
Documentation = "https://github.com/JQQ/ide4ai#readme"
Issues = "https://github.com/JQQ/ide4ai/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = [
    "--strict-markers",
    "--tb=short",
]
markers = [
    "flaky: mark test as flaky (may need multiple retries)",
]
# Coverage options removed from default to allow debugging
# Use: pytest --cov=ide4ai --cov-report=term-missing --cov-report=html
# Or use the poe task: poe test-cov

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
# 收紧并提升问题发现
ignore_missing_imports = false
warn_unused_ignores = true
warn_redundant_casts = true
no_implicit_optional = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
check_untyped_defs = true
strict_equality = true
show_error_codes = true
pretty = true
mypy_path = ["."]

[tool.coverage.run]
source = ["ide4ai"]
omit = ["*/tests/*", "*/.cache/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "\\.\\.\\.",
]

[tool.poe.tasks]
# Linting tasks
lint = "ruff check ide4ai tests"
lint-fix = "ruff check --fix ide4ai tests"
format = "ruff format ide4ai tests"
format-check = "ruff format --check ide4ai tests"

# Type checking
typecheck = "mypy ide4ai"

# Testing tasks
test = "pytest tests"
test-unit = "pytest tests -k 'not integration'"
test-integration = "pytest tests/integration"
test-cov = "pytest tests --cov=ide4ai --cov-report=html --cov-report=term-missing"
test-verbose = "pytest tests -vv"
test-format = ["test", "format"]

# Combined quality checks
check = ["lint", "format-check", "typecheck"]
fix = ["lint-fix", "format"]

# Clean tasks
clean-pyc = "find . -type f -name '*.pyc' -delete && find . -type d -name '__pycache__' -delete"
clean-cov = "rm -rf .coverage htmlcov .pytest_cache"
clean = ["clean-pyc", "clean-cov"]

# Development setup
install = "uv sync"
install-dev = "uv sync --all-extras"

[tool.poe.tasks.docs]
help = "Build documentation (placeholder for future)"
cmd = "echo 'Documentation build not yet configured'"

[tool.poe.tasks.pre-commit]
help = "Run all pre-commit checks"
sequence = ["format", "lint-fix", "typecheck", "test"]

[dependency-groups]
dev = [
    # 测试框架 / Testing framework
    "pytest>=7.4.4",
    "pytest-asyncio>=0.23.3",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-timeout>=2.3.1",
    # 代码质量工具 / Code quality tools
    "ruff>=0.1.11",
    "mypy>=1.16.0",
    # 任务运行器 / Task runner
    "poethepoet>=0.24.0",
    # 版本管理工具 / Version management tool
    "bump-my-version>=1.2.4",
    # AI 相关 / AI related
    "tiktoken>=0.12.0",
    # 类型存根 / Type stubs
    "types-cachetools>=6.2.0.20251022",
    "types-regex>=2025.10.23.20251023",
    "pyfakefs>=5.10.0",
]
